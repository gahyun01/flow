"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/hooks/useUpdateNode.js":
/*!************************************!*\
  !*** ./src/hooks/useUpdateNode.js ***!
  \************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _flowbuilder_Utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/flowbuilder/Utils */ \"(app-pages-browser)/./src/flowbuilder/Utils.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"(app-pages-browser)/./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reactflow */ \"(app-pages-browser)/./node_modules/@reactflow/core/dist/esm/index.mjs\");\n//특정 노드와 엣지를 업데이트하거나 추가하는 역할\nvar _s = $RefreshSig$();\n\n\n\nfunction useUpdateNode() {\n    _s();\n    // ReactFlow에서 제공하는 setNodes와 setEdges 가져오기 (노드와 엣지 상태 업데이트용 함수)\n    const { setNodes, setEdges } = (0,reactflow__WEBPACK_IMPORTED_MODULE_2__.useReactFlow)();\n    // 노드를 업데이트하는 함수 정의\n    const handleSubmitNode = (data, currentNode)=>{\n        // 현재 노드의 타입이 \"Condition\"인 경우\n        if (currentNode.type === _flowbuilder_Utils__WEBPACK_IMPORTED_MODULE_0__.NodeTypes.Condition) {\n            const { conditions } = data;\n            // 새로 생성할 노드를 위한 조건 필터링 ( target이 정의되지 않은 경우 )\n            const creatableNew = conditions.filter((condition)=>condition.target === undefined);\n            const newNode = []; // 새로 추가될 노드를 저장할 배열\n            // 조건 중에서 step ID가 없는 항목에 대해\n            creatableNew.filter((item)=>!item.step.id) // step ID가 없는 조건만 필터링\n            .forEach((node)=>{\n                // 새로운 노드를 생성하여 newNode 배열에 추가\n                alert(\"노드를 생성해주세요.\");\n            });\n            // 기존 노드 상태 업데이트\n            setNodes((nodes)=>{\n                const clonedNodes = [\n                    ...nodes\n                ]; // 기존 노드 배열 복사\n                // 현재 노드를 찾아 데이터 업데이트\n                const maped = clonedNodes.map((item)=>{\n                    if (currentNode.id === item.id) {\n                        var _data_description;\n                        item.data.description = (_data_description = data === null || data === void 0 ? void 0 : data.description) !== null && _data_description !== void 0 ? _data_description : \"\"; // 새 설명 추가\n                        var _data_gotoStep;\n                        item.data.gotoStep = (_data_gotoStep = data === null || data === void 0 ? void 0 : data.gotoStep) !== null && _data_gotoStep !== void 0 ? _data_gotoStep : \"\"; // 이동할 스텝 정보 추가\n                        var _data_conditions;\n                        item.data.conditions = (_data_conditions = data === null || data === void 0 ? void 0 : data.conditions) !== null && _data_conditions !== void 0 ? _data_conditions : []; // 조건 정보 추가\n                        return item; // 업데이트된 노드 반환\n                    }\n                    return item; // 다른 노드는 그대로 반환\n                });\n                // 기존 노드 배열에 새로 생성된 노드 추가\n                const newEmbeddedNode = [\n                    ...maped,\n                    ...newNode\n                ];\n                return newEmbeddedNode; // 업데이트된 노드 배열 반환\n            });\n            // 엣지 상태 업데이트\n            setEdges((edges)=>{\n                const clonededges = [\n                    ...edges\n                ]; // 기존 엣지 배열 복사\n                // 새로운 엣지 생성\n                const newEdge = creatableNew === null || creatableNew === void 0 ? void 0 : creatableNew.map((item, index)=>{\n                    var _item_step, _item_step1;\n                    return (0,_flowbuilder_Utils__WEBPACK_IMPORTED_MODULE_0__.addNewEdge)(currentNode.id, (item === null || item === void 0 ? void 0 : (_item_step = item.step) === null || _item_step === void 0 ? void 0 : _item_step.id) ? item === null || item === void 0 ? void 0 : (_item_step1 = item.step) === null || _item_step1 === void 0 ? void 0 : _item_step1.id : newNode[index].id, \"custom\", item.value // 엣지의 조건 값\n                    );\n                });\n                // 기존 엣지 배열에 새 엣지 추가\n                const newUpdatedEdges = [\n                    ...clonededges,\n                    ...newEdge\n                ];\n                let uniqueArray = lodash__WEBPACK_IMPORTED_MODULE_1___default().uniqBy(newUpdatedEdges, \"id\"); // 중복 엣지 제거 (ID 기준)\n                // 기존 조건 데이터로 엣지를 업데이트\n                conditions.forEach((item)=>{\n                    const index = uniqueArray.findIndex((edge)=>edge.id === item.id); // 조건 ID에 해당하는 엣지 찾기\n                    if (index !== -1) {\n                        var _item_step, _item_step1;\n                        uniqueArray[index] = {\n                            ...uniqueArray[index],\n                            data: {\n                                id: item.id,\n                                condition: item.value,\n                                step: item.step\n                            },\n                            target: (item === null || item === void 0 ? void 0 : (_item_step = item.step) === null || _item_step === void 0 ? void 0 : _item_step.id) ? item === null || item === void 0 ? void 0 : (_item_step1 = item.step) === null || _item_step1 === void 0 ? void 0 : _item_step1.id : uniqueArray[index].target\n                        };\n                    }\n                });\n                return uniqueArray; // 업데이트된 엣지 배열 반환\n            });\n        } else {\n            setNodes((nodes)=>{\n                const clonedNodes = [\n                    ...nodes\n                ]; // 기존 노드 배열 복사\n                // 현재 노드를 찾아 데이터 업데이트\n                const maped = clonedNodes.map((item)=>{\n                    if (currentNode.id === item.id) {\n                        var _data_description;\n                        item.data.description = (_data_description = data === null || data === void 0 ? void 0 : data.description) !== null && _data_description !== void 0 ? _data_description : \"\"; // 새 설명 추가\n                        var _data_gotoStep;\n                        item.data.gotoStep = (_data_gotoStep = data === null || data === void 0 ? void 0 : data.gotoStep) !== null && _data_gotoStep !== void 0 ? _data_gotoStep : \"\"; // 이동할 스텝 정보 추가\n                        var _data_conditions;\n                        item.data.conditions = (_data_conditions = data === null || data === void 0 ? void 0 : data.conditions) !== null && _data_conditions !== void 0 ? _data_conditions : []; // 조건 정보 추가\n                        return item; // 업데이트된 노드 반환\n                    }\n                    return item; // 다른 노드는 그대로 반환\n                });\n                return maped; // 업데이트된 노드 배열 반환\n            });\n        }\n    };\n    return {\n        handleSubmitNode\n    };\n}\n_s(useUpdateNode, \"MBrh2SAdIrGFrxS2yrKqk+iA0hg=\", false, function() {\n    return [\n        reactflow__WEBPACK_IMPORTED_MODULE_2__.useReactFlow\n    ];\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (useUpdateNode);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useUpdateNode.js\n"));

/***/ })

});