"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/flowbuilder/Utils.js":
/*!**********************************!*\
  !*** ./src/flowbuilder/Utils.js ***!
  \**********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EdgeTypes: () => (/* binding */ EdgeTypes),\n/* harmony export */   NodeTypes: () => (/* binding */ NodeTypes),\n/* harmony export */   addEmptyNode: () => (/* binding */ addEmptyNode),\n/* harmony export */   addNewConditionEdge: () => (/* binding */ addNewConditionEdge),\n/* harmony export */   addNewEdge: () => (/* binding */ addNewEdge),\n/* harmony export */   addNewFlowNode: () => (/* binding */ addNewFlowNode),\n/* harmony export */   addNewNode: () => (/* binding */ addNewNode),\n/* harmony export */   checkduplicity: () => (/* binding */ checkduplicity),\n/* harmony export */   initialEdges: () => (/* binding */ initialEdges),\n/* harmony export */   initialNodes: () => (/* binding */ initialNodes),\n/* harmony export */   nodeTypeCondtion: () => (/* binding */ nodeTypeCondtion),\n/* harmony export */   nodeTypeStage: () => (/* binding */ nodeTypeStage),\n/* harmony export */   removeDuplicates: () => (/* binding */ removeDuplicates),\n/* harmony export */   removeDuplicatesById: () => (/* binding */ removeDuplicatesById),\n/* harmony export */   removeSimilarById: () => (/* binding */ removeSimilarById),\n/* harmony export */   toJSON: () => (/* binding */ toJSON)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _flowIcons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./flowIcons */ \"(app-pages-browser)/./src/flowbuilder/flowIcons.jsx\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! lodash */ \"(app-pages-browser)/./node_modules/lodash/lodash.js\");\n/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var reactflow__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! reactflow */ \"(app-pages-browser)/./node_modules/@reactflow/core/dist/esm/index.mjs\");\n// Desc : FlowBuilder에서 사용되는 유틸 함수 및 초기 데이터를 정의하는 파일이다.\n\n\n// lodash 라이브러리 임포트 ( 데이터 중복 제거 및 유틸 함수 사용 )\n\n// React Flow에서 제공하는 MarkerType 임포트 ( 엣지의 화살표 마커 설정 )\n\n// 노드 유형을 정의하는 객체\nconst NodeTypes = {\n    InputNode: \"InputNode\",\n    StepNode: \"StepNode\",\n    Condition: \"Condition\",\n    startNode: \"startNode\",\n    FlowNode: \"FlowNode\",\n    End: \"EndNode\"\n};\n// 엣지 유형을 정의하는 객체\nconst EdgeTypes = {\n    bridge: \"bridge\",\n    custom: \"custom\",\n    default: \"default\",\n    smoothstep: \"smoothstep\"\n};\n// 노드 유형의 예제를 정의하는 배열 (단계별 노드)\nconst nodeTypeStage = [\n    {\n        id: 1,\n        label: \"Input\",\n        type: \"InputNode\",\n        stepType: \"email\"\n    },\n    {\n        id: 2,\n        label: \"Condition\",\n        type: \"Condition\",\n        stepType: \"email\"\n    },\n    {\n        id: 3,\n        label: \"ActionCTION\",\n        type: \"StepNode\",\n        stepType: \"email\"\n    },\n    {\n        id: 4,\n        label: \"End the process\",\n        type: \"EndNode\",\n        stepType: \"email\"\n    }\n];\n// 조건 노드의 예제를 정의하는 배열\nconst nodeTypeCondtion = [\n    {\n        id: 1,\n        label: \"Condition\",\n        Icon: _flowIcons__WEBPACK_IMPORTED_MODULE_0__.flowIcons.HasEmail,\n        type: \"Condition\",\n        stepType: \"email\"\n    }\n];\n// 초기 노드 배열 정의 (프로세스 시작 노드)\nconst initialNodes = [\n    {\n        id: \"start-node\",\n        type: \"startNode\",\n        position: {\n            x: 0,\n            y: 0\n        },\n        data: {\n            description: \"Begin the process\",\n            stepType: \"start\",\n            conditions: []\n        }\n    }\n];\n// 초기 엣지 배열 정의\nconst initialEdges = [\n    {\n        id: \"edge-button2\",\n        source: \"start-node\",\n        target: \"node-4\",\n        type: \"default\",\n        data: {\n            condition: \"\",\n            icon: false\n        },\n        markerEnd: {\n            type: reactflow__WEBPACK_IMPORTED_MODULE_2__.MarkerType.Arrow,\n            width: 24,\n            height: 24,\n            color: \"#335CCB\"\n        }\n    }\n];\n// 새로운 노드를 추가하는 함수 ( 이전 노드의 위치를 기준으로 랜덤 위치에 추가 )\nconst addNewNode = (data, currentNode)=>{\n    var _currentNode_position, _currentNode_position1;\n    let newFlowId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(); // 고유 ID 생성\n    let newNode = {\n        id: newFlowId,\n        type: data.type,\n        // 노드의 위치 설정 (랜덤 X, Y 좌표)\n        position: {\n            x: Math.floor(Math.random() * 100) + (currentNode === null || currentNode === void 0 ? void 0 : (_currentNode_position = currentNode.position) === null || _currentNode_position === void 0 ? void 0 : _currentNode_position.x),\n            y: Math.floor(Math.random() * 400) + (currentNode === null || currentNode === void 0 ? void 0 : (_currentNode_position1 = currentNode.position) === null || _currentNode_position1 === void 0 ? void 0 : _currentNode_position1.y) - 20\n        },\n        data: {\n            description: data.label,\n            conditions: []\n        }\n    };\n    return newNode;\n};\n// 빈 노드를 추가하는 함수 ( 랜덤 위치에 )\nconst addEmptyNode = (data)=>{\n    let newFlowId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    let newNode = {\n        id: newFlowId,\n        type: data.type,\n        // 노드의 위치 설정 (랜덤 X, Y 좌표)\n        position: {\n            x: Math.floor(Math.random() * 100),\n            y: Math.floor(Math.random() * 400)\n        },\n        // 노드의 데이터 초기화\n        data: {\n            description: data.label,\n            stepType: data.stepType,\n            conditions: []\n        }\n    };\n    return newNode;\n};\n// Flow 노드를 추가하는 함수\nconst addNewFlowNode = (currentNode)=>{\n    let newFlowId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    let newNode = {\n        id: newFlowId,\n        type: NodeTypes.FlowNode,\n        position: {\n            x: currentNode.position.x,\n            y: currentNode.position.y + 100\n        },\n        data: {\n            description: \"\",\n            stepType: \"\",\n            conditions: []\n        }\n    };\n    return newNode;\n};\n// 조건 엣지를 추가하는 함수\nconst addNewConditionEdge = (sourceId, targetId, condition, icon)=>{\n    // 고유한 엣지 ID 생성 : uuidv4()로 유니크한 ID를 생성\n    let newEdgeId = (0,uuid__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\n    // 새로운 엣지 객체 생성\n    let newEdge = {\n        id: newEdgeId,\n        source: sourceId,\n        target: targetId,\n        labelBgBorderRadius: 4,\n        // 엣지 타입을 custom으로 설정\n        type: EdgeTypes.custom,\n        // 엣지의 추가 데이터 설정\n        data: {\n            condition,\n            icon\n        },\n        style: {\n            stroke: \"black\",\n            strokeWidth: \"1.3\"\n        },\n        // 엣지 끝에 화살표를 추가하는 설정\n        markerEnd: {\n            type: reactflow__WEBPACK_IMPORTED_MODULE_2__.MarkerType.Arrow,\n            width: 24,\n            height: 24,\n            color: \"#335CCB\"\n        }\n    };\n    return newEdge;\n};\n// 기본 엣지를 추가하는 함수\nconst addNewEdge = (sourceId, targetId, type, condition)=>{\n    // 새로운 엣지 ID 생성 : sourceId와 targetId를 결합하여 고유한 ID를 생성\n    let newEdgeId = \"\".concat(sourceId + \">\" + targetId);\n    // 새로운 엣지 객체 생성\n    let newEdge = {\n        id: newEdgeId,\n        source: sourceId,\n        target: targetId,\n        type: type,\n        style: {\n            stroke: \"black\",\n            strokeWidth: \"1.3\"\n        },\n        labelBgBorderRadius: 4,\n        // 엣지 끝 부분에 화살표를 표시하기 위한 설정\n        markerEnd: {\n            type: reactflow__WEBPACK_IMPORTED_MODULE_2__.MarkerType.Arrow,\n            width: 24,\n            height: 24,\n            color: \"#335CCB\"\n        },\n        // 엣지의 추가 데이터를 설정\n        data: {\n            icon: false,\n            // 조건 값 설정 (조건이 주어지지 않으면 빈 문자열로 설정)\n            condition: condition !== null && condition !== void 0 ? condition : \"\"\n        }\n    };\n    return newEdge;\n};\n// 노드 및 엣지 데이터를 JSON으로 변환하고 파일로 저장하는 함수\nfunction toJSON(elements) {\n    const downloadLink = document.createElement(\"a\");\n    const fileBlob = new Blob([\n        JSON.stringify(elements, null, 2)\n    ], {\n        type: \"application/json\"\n    });\n    downloadLink.href = URL.createObjectURL(fileBlob);\n    downloadLink.download = \"voiceBuilder.json\";\n    downloadLink.click();\n}\n// 데이터 중복을 확인하는 함수\nconst checkduplicity = (arrayData)=>{\n    const itemsData = arrayData.filter((value, index)=>{\n        const _value = JSON.stringify(value);\n        return index === arrayData.findIndex((obj)=>{\n            return JSON.stringify(obj) === _value;\n        });\n    });\n    return itemsData;\n};\n// 두 배열의 중복 요소를 제거하는 함수\nconst removeDuplicates = (array1, array2)=>array1.filter((item)=>array2.includes(item));\n// 배열의 ID를 기준으로 중복을 제거하는 함수\nfunction removeDuplicatesById(array1, array2) {\n    const combinedArray = [\n        ...array1,\n        ...array2\n    ];\n    const uniqueArray = lodash__WEBPACK_IMPORTED_MODULE_1___default().uniqBy(combinedArray, \"id\");\n    return uniqueArray;\n}\n// 배열의 ID를 기준으로 유사한 요소를 제거하는 함수\nfunction removeSimilarById(array1, array2) {\n    const uniqueArray1 = lodash__WEBPACK_IMPORTED_MODULE_1___default().differenceBy(array1, array2, \"id\");\n    return uniqueArray1;\n}\n// 여러 함수와 초기 데이터를 내보내기\n\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/flowbuilder/Utils.js\n"));

/***/ })

});